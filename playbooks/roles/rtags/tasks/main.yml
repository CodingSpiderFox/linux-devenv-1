---

- name: install dependencies
  become: true
  apt:
    name:
      - libclang-6.0-dev
      - libcppunit-dev

- name: checkout git repository
  become: true
  git:
    repo: https://github.com/Andersbakken/rtags.git
    dest: /usr/local/src/rtags-{{ rtags_version }}
    version: v{{ rtags_version }}

- name: create working directory to build
  become: true
  file:
    path: /usr/local/src/rtags-{{ rtags_version }}/build
    state: directory

- name: compile and install
  become: true
  shell: "{{ item }}"
  args:
    chdir: /usr/local/src/rtags-{{ rtags_version }}/build
  with_items:
    - cmake .. -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_PREFIX=/usr/local/stow/rtags-{{ rtags_version }} -DRTAGS_NO_ELISP_FILES=1  # yamllint disable-line rule:line-length
    - make
    - make install

- name: stow
  become: true
  shell: stow -R rtags-{{ rtags_version }}
  args:
    chdir: /usr/local/stow

- name: add upstart file
  become: true
  copy:
    src: rtags-rdm.conf
    dest: /etc/init
    mode: 0664

- name: remove CR code in upstart file
  become: true
  replace:
    dest: /etc/init/rtags-rdm.conf
    regexp: '\r'
    replace: ''

- name: enable and restart upstart job
  become: true
  shell: "{{ item }}"
  with_items:
    - initctl reload-configuration
    - initctl stop rtags-rdm || true
    - initctl start rtags-rdm


# How to use
#
# 1. run daemon
#   provision by this file, run daemon as a upstart job
#
# 2. generate compile_commands.json
#   ```
#   $ cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .
#   ```
#
# 3. run indexer (using compile_commands.json)
#   ```
#   $ rc -J
#   ```
#   MEMO: rdm is daemon, and rc is its client
#
# 4. query (using index)
#   ```
#   $ rc --references src/sum.cc:21:5
#   $ rc --all-references --definition-only --references src/sum.cc:21:5
#   $ rc --all-references --declaration-only --references src/sum.cc:21:5
#   ```
#   TIPS: refer `rc --help` or `man rc`
#
# 5. check log if you need
#   ```
#   $ rc --rdm-log
#   ```
